{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/layout/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/post/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","_components_post_post__WEBPACK_IMPORTED_MODULE_2__","IndexPage","props","data","layoutData","posts","allMarkdownRemark","edges","a","createElement","url","className","map","post","idx","key","node","fields","slug","title","frontmatter","date","postdate","excerpt","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","PureSidebar","_ref","activeUri","menus","react_default","href","role","aria-label","type","id","htmlFor","gatsby_browser_entry","to","menu","name","toLowerCase","console","log","Date","getFullYear","Sidebar","sidebar_PureSidebar","Object","assign","_675172197","PureLayout","Fragment","Helmet_default","meta","content","lang","sidebar_Sidebar","Layout","layout_PureLayout","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","gatsby__WEBPACK_IMPORTED_MODULE_1__","Post","related_posts","index"],"mappings":"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","file":"component---src-pages-index-js-a9bdfd8bb7a333009094.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/layout'\nimport Post from '../components/post/post'\n\nconst IndexPage = props => {\n  const { data, layoutData } = props\n  let posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout data={layoutData} url=\"/\">\n      <div className=\"posts\">\n        {posts ? (\n          posts.map((post, idx) => (\n            <Post\n              key={idx}\n              url={post.node.fields.slug}\n              title={post.node.frontmatter.title}\n              date={post.node.frontmatter.postdate}\n            >\n              <p>{post.node.excerpt}</p>\n            </Post>\n          ))\n        ) : (\n          <h1>No Posts</h1>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { layout: { eq: \"post\" } } }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            postdate: date(formatString: \"MMMM Do, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Link } from 'gatsby'\n\nexport const PureSidebar = ({ data, activeUri }) => {\n  const menus = data.allMarkdownRemark.edges\n  return (\n    <div className=\"sidebar\">\n      <div className=\"container sidebar-sticky\">\n        <div className=\"sidebar-about\">\n          <h1>\n            <a href=\"/\">\n              <span role=\"img\" aria-label=\"emoji\">\n                👨🏻‍💻{' '}\n              </span>\n              <span className=\"tags\">{`</`}</span>\n              {`D.Dauster`}\n              <span className=\"tags\">{`>`}</span>\n            </a>\n          </h1>\n          <p className=\"tagline\">Code Has No Accent</p>\n        </div>\n        <input type=\"checkbox\" id=\"menu-icon\" />\n        <label className=\"menu-label\" htmlFor=\"menu-icon\" />\n        <div className=\"trigger\">\n          <ul className=\"sidebar-nav\">\n            <li>\n              <Link\n                to=\"/\"\n                className={\n                  activeUri === '/'\n                    ? 'sidebar-nav-item active'\n                    : 'sidebar-nav-item'\n                }\n              >\n                Home\n              </Link>\n            </li>\n            {menus\n              ? menus.map(menu => {\n                  const { name } = menu.node.frontmatter\n                  const url = `${name.toLowerCase()}`\n                  console.log('activeUri: ' + activeUri)\n                  console.log('url :' + url)\n                  return (\n                    <li key={name}>\n                      <Link\n                        to={url}\n                        className={\n                          activeUri === url\n                            ? 'sidebar-nav-item active'\n                            : 'sidebar-nav-item'\n                        }\n                      >\n                        {name}\n                      </Link>\n                    </li>\n                  )\n                })\n              : null}\n          </ul>\n        </div>\n        <p className=\"copyright\">\n          {' '}\n          &copy; {new Date().getFullYear()}. All rights reserved.\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport const Sidebar = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          filter: { frontmatter: { layout: { eq: \"sidebar\" } } }\n          sort: { fields: frontmatter___name, order: ASC }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                name\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureSidebar {...props} data={data} />}\n  />\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Sidebar, PureSidebar } from '../sidebar/sidebar'\nimport './poole.css'\nimport './hyde.css'\nimport './syntax.css'\n\nexport const PureLayout = ({ children, title, data, url }) => {\n  return (\n    <>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: 'Diogenes WebSite' },\n          { name: 'keywords', content: 'blog, developer, Diógenes Dauster' },\n        ]}\n      >\n        <html lang=\"en\" />\n      </Helmet>\n\n      {data ? (\n        <PureSidebar data={data} activeUri={url} />\n      ) : (\n        <Sidebar activeUri={url} />\n      )}\n\n      <div className=\"content container\">{children}</div>\n    </>\n  )\n}\n\nexport const Layout = props => <PureLayout {...props} />\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nconst Post = ({ title, url, date, related_posts, children }) => {\n  return (\n    <>\n      <div className=\"post\">\n        <h1 className=\"post-title\">\n          {url ? <Link to={url}>{title}</Link> : title}\n        </h1>\n        <span className=\"post-date\">{date}</span>\n        {children}\n      </div>\n\n      {related_posts ? (\n        <div className=\"related\">\n          <h2>Related Posts</h2>\n          <ul className=\"related-posts\">\n            {related_posts.map((post, index) => (\n              <li id={index}>\n                <h3>\n                  <Link to={post.url}>\n                    {post.title} {'  '}\n                    <small>{post.date}</small>\n                  </Link>\n                </h3>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}
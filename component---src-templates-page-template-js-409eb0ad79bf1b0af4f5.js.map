{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/templates/PageTemplate.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/layout/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/page/page.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","_ref","data","a","createElement","style","textAlign","src","alt","query","PageTemplate","layoutData","pages","allMarkdownRemark","edges","title","node","frontmatter","sidebar","react__WEBPACK_IMPORTED_MODULE_1___default","_components_layout_layout__WEBPACK_IMPORTED_MODULE_2__","_components_page_page__WEBPACK_IMPORTED_MODULE_3__","map","page","idx","key","dangerouslySetInnerHTML","__html","html","_pages_404__WEBPACK_IMPORTED_MODULE_4__","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","PureSidebar","menus","react_default","className","href","role","aria-label","gatsby_browser_entry","to","menu","name","url","toLowerCase","Date","getFullYear","Sidebar","sidebar_PureSidebar","Object","assign","_675172197","PureLayout","Fragment","Helmet_default","meta","content","lang","sidebar_Sidebar","Layout","layout_PureLayout","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Page"],"mappings":"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","file":"component---src-templates-page-template-js-409eb0ad79bf1b0af4f5.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout/layout'\n\nconst NotFoundPage = ({ data }) => {\n  return (\n    <Layout data={data}>\n      <div style={{ textAlign: 'center' }}>\n        <img src=\"/images/one-punch-man.png\" alt=\"404\" />\n        <h1>404 Page not Found</h1>\n      </div>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/layout'\nimport Page from '../components/page/page'\nimport NotFoundPage from '../pages/404'\n\nconst PageTemplate = ({ data, layoutData }) => {\n  const pages = data.allMarkdownRemark.edges\n  const title = data.allMarkdownRemark.edges[0].node.frontmatter.sidebar\n\n  return (\n    <Layout data={layoutData}>\n      <Page title={title}>\n        {pages || title ? (\n          pages.map((page, idx) => {\n            return (\n              <div\n                key={idx}\n                dangerouslySetInnerHTML={{ __html: page.node.html }}\n              />\n            )\n          })\n        ) : (\n          <NotFoundPage />\n        )}\n      </Page>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            sidebar\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default PageTemplate\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Link } from 'gatsby'\n\nexport const PureSidebar = ({ data }) => {\n  const menus = data.allMarkdownRemark.edges\n  return (\n    <div className=\"sidebar\">\n      <div className=\"container sidebar-sticky\">\n        <div className=\"sidebar-about\">\n          <h1>\n            <a href=\"/\">\n              <span role=\"img\" aria-label=\"emoji\">\n                👨🏻‍💻{' '}\n              </span>\n              <span>{`</`}</span>\n              {`Diógenes Dauster`}\n              <span>{`>`}</span>\n            </a>\n          </h1>\n          <p className=\"lead\">Code Has No Accent</p>\n        </div>\n\n        <nav className=\"sidebar-nav\">\n          <Link to=\"/\" className=\"sidebar-nav-item\">\n            Home\n          </Link>\n          {menus\n            ? menus.map(menu => {\n                const { name } = menu.node.frontmatter\n                const url = `${name.toLowerCase()}`\n                return (\n                  <Link to={url} key={name} className=\"sidebar-nav-item\">\n                    {name}\n                  </Link>\n                )\n              })\n            : null}\n        </nav>\n        <p>&copy; {new Date().getFullYear()}. All rights reserved.</p>\n      </div>\n    </div>\n  )\n}\n\nexport const Sidebar = props => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          filter: { frontmatter: { layout: { eq: \"sidebar\" } } }\n          sort: { fields: frontmatter___name, order: ASC }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                name\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => <PureSidebar {...props} data={data} />}\n  />\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Sidebar, PureSidebar } from '../sidebar/sidebar'\nimport './layout.css'\nimport './syntax.css'\n\nexport const PureLayout = ({ children, title, data }) => {\n  return (\n    <>\n      <Helmet\n        title={title}\n        meta={[\n          { name: 'description', content: 'Diogenes WebSite' },\n          { name: 'keywords', content: 'blog, developer, Diogenes Dauster' },\n        ]}\n      >\n        <html lang=\"en\" />\n      </Helmet>\n\n      {data ? <PureSidebar data={data} /> : <Sidebar />}\n\n      <div className=\"content container\">{children}</div>\n    </>\n  )\n}\n\nexport const Layout = props => <PureLayout {...props} />\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nconst Page = ({ children, title }) => {\n  return (\n    <div className=\"page\">\n      <h1 className=\"page-title\">{title}</h1>\n      {children}\n    </div>\n  )\n}\nexport default Page\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/sidebar/sidebar.js","webpack:///./src/components/layout/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/post/post.js"],"names":["query","IndexPage","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout_layout__WEBPACK_IMPORTED_MODULE_2__","className","map","post","idx","_components_post_post__WEBPACK_IMPORTED_MODULE_3__","key","url","node","fields","slug","title","frontmatter","date","postdate","excerpt","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Sidebar","react_default","gatsby_browser_entry","menus","href","role","aria-label","to","menu","name","toLowerCase","Date","getFullYear","_675172197","Layout","Fragment","Helmet_default","meta","content","lang","sidebar","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Post","related_posts","gatsby__WEBPACK_IMPORTED_MODULE_2__","index","id"],"mappings":"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","file":"component---src-pages-index-js-b5abf590fd8770130e65.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout/layout'\nimport Post from '../components/post/post'\n\nconst IndexPage = ({ data }) => {\n  let posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout>\n      <div className=\"posts\">\n        {posts ? (\n          posts.map((post, idx) => (\n            <Post\n              key={idx}\n              url={post.node.fields.slug}\n              title={post.node.frontmatter.title}\n              date={post.node.frontmatter.postdate}\n            >\n              <p>{post.node.excerpt}</p>\n            </Post>\n          ))\n        ) : (\n          <h1>No Posts</h1>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(filter: { fields: { layout: { eq: \"post\" } } }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            postdate: date(formatString: \"MMMM Do, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Link } from 'gatsby'\n\nconst Sidebar = () => (\n  <StaticQuery\n    query={graphql`\n      query {\n        allMarkdownRemark(\n          filter: { frontmatter: { layout: { eq: \"sidebar\" } } }\n          sort: { fields: frontmatter___name, order: ASC }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                name\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      const menus = data.allMarkdownRemark.edges\n      return (\n        <div className=\"sidebar\">\n          <div className=\"container sidebar-sticky\">\n            <div className=\"sidebar-about\">\n              <h1>\n                <a href=\"/\">\n                  <span role=\"img\" aria-label=\"emoji\">\n                    üë®üèª‚Äçüíª{' '}\n                  </span>\n                  <span>{`</`}</span>\n                  {`Di√≥genes Dauster`}\n                  <span>{`>`}</span>\n                </a>\n              </h1>\n              <p className=\"lead\">Code Has No Accent</p>\n            </div>\n\n            <nav className=\"sidebar-nav\">\n              <Link to=\"/\" className=\"sidebar-nav-item\">\n                Home\n              </Link>\n              {menus\n                ? menus.map(menu => {\n                    const { name } = menu.node.frontmatter\n                    const url = `${name.toLowerCase()}`\n                    return (\n                      <Link to={url} key={name} className=\"sidebar-nav-item\">\n                        {name}\n                      </Link>\n                    )\n                  })\n                : null}\n            </nav>\n            <p>&copy; {new Date().getFullYear()}. All rights reserved.</p>\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nexport default Sidebar\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport Sidebar from '../sidebar/sidebar'\nimport './layout.css'\nimport './syntax.css'\n\nconst Layout = ({ children, title }) => (\n  <>\n    <Helmet\n      title={title}\n      meta={[\n        { name: 'description', content: 'Sample' },\n        { name: 'keywords', content: 'sample, something' },\n      ]}\n    >\n      <html lang=\"en\" />\n    </Helmet>\n\n    <Sidebar />\n    <div className=\"content container\">{children}</div>\n  </>\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\nconst Post = ({ title, url, date, related_posts, children }) => {\n  return (\n    <>\n      <div className=\"post\">\n        <h1 className=\"post-title\">\n          {url ? <Link to={url}>{title}</Link> : title}\n        </h1>\n        <span className=\"post-date\">{date}</span>\n        {children}\n      </div>\n\n      {related_posts ? (\n        <div className=\"related\">\n          <h2>Related Posts</h2>\n          <ul className=\"related-posts\">\n            {related_posts.map((post, index) => (\n              <li id={index}>\n                <h3>\n                  <Link to={post.url}>\n                    {post.title} {'  '}\n                    <small>{post.date}</small>\n                  </Link>\n                </h3>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : null}\n    </>\n  )\n}\n\nexport default Post\n"],"sourceRoot":""}